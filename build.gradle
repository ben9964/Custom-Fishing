plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group = 'net.momirealms'
version = '1.3.2.5'

repositories {
    maven {name = "aliyun-repo"; url = "https://maven.aliyun.com/repository/public/"}
    maven {name = 'papermc-repo'; url = 'https://papermc.io/repo/repository/maven-public/'}
    maven {name = 'sonatype-repo'; url = 'https://oss.sonatype.org/content/groups/public/'}
    maven {name = "dmulloy2-repo"; url = "https://repo.dmulloy2.net/repository/public/"}
    maven {name = "clip-repo"; url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'}
    maven {name = "codemc-repo"; url = "https://repo.codemc.org/repository/maven-public/"}
    maven {name = "sk89q-repo"; url = "https://maven.enginehub.org/repo/"}
    maven {name = "jitpack-repo"; url = "https://jitpack.io"}
    maven {name = "Lumine-repo"; url = "https://mvn.lumine.io/repository/maven-public"}
    maven {name = 'rapture-repo'; url = 'https://repo.rapture.pw/repository/maven-releases/'}
    maven {name = 'mmo-repo'; url = 'https://nexus.phoenixdevt.fr/repository/maven-public/'}
    maven {name = 'i-repo'; url = 'https://r.irepo.space/maven/'}
    maven {name = 'auxilor-repo'; url = 'https://repo.auxilor.io/repository/maven-public/'}
    maven {name = 'betonquest-repo'; url = 'https://betonquest.org/nexus/repository/betonquest/'}
    mavenCentral()
}

dependencies {
    compileOnly fileTree(dir:'libs',includes:['*.jar'])
    implementation fileTree(dir:'libs',includes:['BiomeAPI.jar'])
    compileOnly("io.papermc.paper:paper-api:1.20.1-R0.1-SNAPSHOT")
    compileOnly('dev.folia:folia-api:1.20.1-R0.1-SNAPSHOT')
    compileOnly('com.zaxxer:HikariCP:5.0.1')
    compileOnly('commons-io:commons-io:2.11.0')
    compileOnly('com.github.Archy-X:AureliumSkills:Beta1.3.6')
    compileOnly('redis.clients:jedis:4.4.3')
    compileOnly('me.clip:placeholderapi:2.11.3')
    compileOnly("com.github.oraxen:oraxen:1.158.0")
    compileOnly('io.lumine:Mythic-Dist:5.2.1')
    compileOnly('dev.dejvokep:boosted-yaml:1.3.1')
    compileOnly('com.github.LoneDev6:api-itemsadder:3.4.1-r4')
    compileOnly('net.objecthunter:exp4j:0.4.8')
    compileOnly('org.mariadb.jdbc:mariadb-java-client:3.1.4')
    compileOnly('com.google.code.gson:gson:2.10.1')
    compileOnly('com.willfp:EcoEnchants:10.13.0')
    compileOnly("pers.neige.neigeitems:NeigeItems:1.14.23")
    compileOnly('net.Indyuce:MMOItems-API:6.9.2-SNAPSHOT')
    compileOnly('io.lumine:MythicLib-dist:1.6-SNAPSHOT')
    compileOnly("com.comphenix.protocol:ProtocolLib:5.0.0")
    compileOnly('net.Indyuce:MMOCore-API:1.12-SNAPSHOT')
    compileOnly('com.github.Zrips:Jobs:4.17.2')
    compileOnly("com.willfp:eco:6.65.1")
    compileOnly("com.willfp:EcoJobs:3.13.0")
    compileOnly("com.willfp:EcoSkills:3.8.1")
    compileOnly("com.github.MilkBowl:VaultAPI:1.7")
    compileOnly("com.github.Archy-X:AureliumSkills:Beta1.3.21")
    implementation('net.kyori:adventure-api:4.14.0')
    implementation('net.kyori:adventure-platform-bukkit:4.3.0')
    implementation('net.kyori:adventure-text-minimessage:4.14.0')
    implementation('net.kyori:adventure-text-serializer-legacy:4.14.0')
    implementation('de.tr7zw:item-nbt-api:2.11.3')
    implementation('org.bstats:bstats-bukkit:3.0.1')
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.release = targetJavaVersion
    options.encoding = "UTF-8"
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

shadowJar {
    relocate 'de.tr7zw', 'net.momirealms.customfishing.libs.de.tr7zw'
    relocate 'net.kyori', 'net.momirealms.customfishing.libs.net.kyori'
    relocate 'org.bstats', 'net.momirealms.customfishing.libs.org.bstats'
    relocate 'net.momirealms.biomeapi', 'net.momirealms.customfishing.libs.net.momirealms.biomeapi'
}

tasks.register("delete", Delete).get().delete("build/libs/"+project.name+"-"+project.version+".jar")
tasks.named("build").get().dependsOn("shadowJar").finalizedBy("delete").doLast {
    println("Deleting: "+ "build/libs/"+project.name+"-"+project.version+".jar")
}